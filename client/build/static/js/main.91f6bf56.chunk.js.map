{"version":3,"sources":["reducers/authReducer.js","reducers/errorReducer.js","reducers/messageReducer.js","reducers/controlsReducer.js","reducers/rootReducer.js","actions/types.js","store.js","actions/errorActions.js","actions/authActions.js","components/helpers/PrivateRoute.js","components/AppNavbar.js","components/sign/Register.js","components/Home.js","components/About.js","components/sign/Login.js","actions/messageActions.js","components/messenger/MessageInput.js","components/messenger/Message.js","components/messenger/MessageContainer.js","components/messenger/Chat.js","components/messenger/RecentDialogue.js","components/helpers/Controls.js","actions/controlsActions.js","components/containers/Inbox.js","App.js","serviceWorker.js","index.js"],"names":["initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","message","status","id","recents_loading","recents","messages_loading","messages","user_id","dialogue_id","sending","page","users","combineReducers","auth","state","arguments","length","undefined","action","type","Object","objectSpread","payload","setItem","removeItem","error","concat","toConsumableArray","controls","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","apply","returnErrors","loadUser","dispatch","getState","config","headers","Content-type","axios","get","then","res","data","catch","err","response","connect","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","AppNavbar","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleLogout","logout","username","name","guestHeader","className","react_router_dom","to","userHeader","onClick","Fragment","location","href","Register","handleSubmit","e","preventDefault","alert","registerUser","email","password","history","push","handleChange","setState","defineProperty","target","value","redirect","onSubmit","onChange","body","JSON","stringify","post","Content-Type","Home","About","Login","loginUser","_ref2","getDialogues","console","log","getMessages","MessageInput","handleSend","sendMessage","requestBody","_res$data$msg","msg","created_on","_id","isMine","Message","_this$props$message","MessageContainer","updateScroll","messagesEnd","scrollIntoView","behavior","loadMore","_this2","style","float","clear","ref","el","map","index","array","key","messenger_Message","Chat","messenger_MessageContainer","messenger_MessageInput","RecentDialogue","handleDialogueClick","recent","Controls","newDialogue","searchValue","openDialogue","getAllUsers","marginTop","newUser","userIndex","indexOf","Inbox","helpers_Controls","messenger_RecentDialogue","messenger_Chat","App","es","components_AppNavbar","path","exact","helpers_PrivateRoute","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91f6bf56.chunk.js","sourcesContent":["import {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_FAIL,\n    REGISTER_SUCCESS\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    isLoading: false,\n    user: null\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case USER_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            }\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload\n            }\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                isLoading: false\n            }\n        case AUTH_ERROR:\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false\n            }\n        case REGISTER_FAIL:\n        case LOGIN_FAIL:\n        case LOGOUT_SUCCESS:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false\n            }\n        default:\n            return state;\n    }\n}","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {\n    message: {},\n    status: null,\n    id: null\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return {\n                message: action.payload.message,\n                status: action.payload.status,\n                id: action.payload.id\n            };\n        case CLEAR_ERRORS:\n            return {\n                message: {},\n                status: null,\n                id: null\n            }\n        default:\n            return state;\n    }\n}","import {\n    RECENTS_LOADING,\n    RECENT_LOADED,\n    RECENT_LOADING_FAIL,\n    MESSAGES_LOADED,\n    MESSAGES_LOADING,\n    MESSAGE_LOADING_FAIL,\n    MESSAGE_SENT,\n    SEND_MESSAGE,\n    SEND_MESSAGE_FAIL,\n    LOAD_MORE\n} from '../actions/types';\n\nconst initialState = {\n    recents_loading: false,\n    recents: [],\n    messages_loading: false,\n    messages: [],\n    user: null,\n    user_id: null,\n    dialogue_id: null,\n    sending: false,\n    page: 1\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case RECENTS_LOADING:\n            return {\n                ...state,\n                recents_loading: true,\n            }\n        case RECENT_LOADED:\n            return {\n                ...state,\n                recents: action.payload,\n                recents_loading: false\n            }\n        case RECENT_LOADING_FAIL:\n            return {\n                ...state,\n                recents: [],\n                recents_loading: false,\n                user: null\n            }\n        case MESSAGES_LOADING:\n            return {\n                ...state,\n                messages_loading: true,\n                user: action.payload.user,\n                dialogue_id: action.payload.id\n            }\n        case MESSAGES_LOADED:\n            return {\n                ...state,\n                messages_loading: false,\n                messages: action.payload.messages.messages,\n                user: action.payload.user,\n                page: 2,\n                user_id: action.payload.user_id\n            }\n        case LOAD_MORE:\n            return {\n                ...state,\n                page: action.payload.messages.messages.length === 0 ? state.page : state.page + 1,\n                messages_loading: false,\n                messages: [...state.messages, ...action.payload.messages.messages]\n            }\n        case MESSAGE_LOADING_FAIL:\n            return {\n                ...state,\n                messages: [],\n                messages_loading: false,\n                user: null,\n                user_id: null\n            }\n        case SEND_MESSAGE:\n            return {\n                ...state,\n                sending: true\n            }\n        case MESSAGE_SENT:\n            return {\n                ...state,\n                sending: false,\n                messages: [action.payload, ...state.messages]\n            }\n        case SEND_MESSAGE_FAIL:\n            return {\n                ...state,\n                sending: false\n            }\n        default:\n            return state;\n    }\n}","import { GET_USERS } from '../actions/types';\n\nconst initialState = {\n    users: []\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_USERS:\n            return {\n                ...state,\n                users: action.payload\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\nimport messageReducer from './messageReducer';\nimport controlsReducer from './controlsReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    error: errorReducer,\n    message: messageReducer,\n    controls: controlsReducer\n});","// Error actions\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n\n// Auth actions\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\n\n// Message loading actions\nexport const RECENTS_LOADING = \"RECENTS_LOADING\"\nexport const RECENT_LOADED = \"RECENT_LOADED\"\nexport const RECENT_LOADING_FAIL = \"RECENT_LOADING_FAIL\"\nexport const MESSAGES_LOADING = \"MESSAGES_LOADING\"\nexport const MESSAGES_LOADED = \"MESSAGES_LOADED\"\nexport const MESSAGE_LOADING_FAIL = \"MESSAGE_LOADING_FAIL\"\nexport const LOAD_MORE = \"LOAD_MORE\"\n\n// Message sending actions\nexport const SEND_MESSAGE = \"SEND_MESSAGE\"\nexport const SEND_MESSAGE_FAIL = \"SEND_MESSAGE_FAIL\"\nexport const MESSAGE_SENT = \"MESSAGE_SENT\"\nexport const GET_USERS = \"GET_USERS\";","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst initialState = {};\n\nconst middlewares = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport default store;","import {GET_ERRORS, CLEAR_ERRORS} from '../actions/types';\n\nexport const returnErrors = (message, status, id = null) => ({\n    type: GET_ERRORS,\n    payload: {\n        message,\n        status,\n        id\n    }\n})\n\nexport const clearErrors = () => ({type: CLEAR_ERRORS})","import axios from 'axios';\nimport {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_FAIL,\n    REGISTER_SUCCESS\n} from '../actions/types';\nimport {returnErrors} from './errorActions'\n\nexport const loadUser = () => (dispatch, getState) => {\n    dispatch({type: USER_LOADING});\n\n    const token = getState().auth.token;\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    }\n\n    if (token) \n        config.headers['x-auth-token'] = token;\n    \n    axios\n        .get('/api/auth/user', config)\n        .then(res => {\n            dispatch({type: USER_LOADED, payload: res.data})\n        })\n        .catch(err => {\n            if (err.response) \n                dispatch(returnErrors(err.response.data, err.response.status));\n            dispatch({type: AUTH_ERROR})\n        })\n}\n\nexport const logout = () => dispatch => {\n    dispatch({type: LOGOUT_SUCCESS});\n    window.location.href = '/';\n}\n\nexport const registerUser = ({name, email, password}) => dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    // Request body\n    const body = JSON.stringify({name, email, password});\n\n    return axios\n        .post('/api/users', body, config)\n        .then(res => {\n            dispatch({type: REGISTER_SUCCESS, payload: res.data});\n            const token = res.data.token;\n            localStorage.setItem('token', token)\n            return res;\n        })\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n            dispatch({type: REGISTER_FAIL});\n            return err;\n        });\n}\n\nexport const loginUser = ({name, password}) => dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({name, password});\n\n    return axios\n        .post('/api/auth', body, config)\n        .then(res => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            })\n            return res;\n        })\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'))\n            dispatch({type: LOGIN_FAIL});\n            return err;\n        })\n}","import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {loadUser} from '../../actions/authActions';\n\nconst PrivateRoute = ({\n    component: Component,\n    auth,\n    ...rest\n}) => {\n    return <Route\n        {...rest}\n        render={props => true//auth.isAuthenticated\n        ? (<Component {...props}/>)\n        : <Redirect to={{\n            pathname: \"/login\"\n        }}/>}/>\n}\n\n\nexport default connect(state => ({auth: state.auth}), {loadUser})(PrivateRoute);","import React, {Component} from 'react';\n\nimport {connect} from 'react-redux';\nimport {logout} from '../actions/authActions';\nimport {Link} from 'react-router-dom';\n\nclass AppNavbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    handleLogout = () => {\n        this.props.logout();\n    }\n\n    render() {\n        const auth = this.props.auth.isAuthenticated;\n        const user = this.props.auth.user || null;\n        let username;\n        if (user) username = user.name;\n        const guestHeader = <div className='navbar'>\n            <Link to='/' className='navbar-header'>iMessage clone</Link>\n            <Link className='navbar-btn' to='/register'>Register</Link>\n            <Link className='navbar-btn' to='/login'>Login</Link>\n        </div>;\n\n        const userHeader = <div className='navbar'>\n            <span className='navbar-header'>Welcome, {username}!</span>\n            <button onClick={this.handleLogout} className='navbar-btn'>Logout</button>\n            <Link className='navbar-btn' to='/inbox'>Inbox</Link>\n            <Link className='navbar-btn' to='/home'>Home</Link>\n        </div>\n        return <React.Fragment>\n            {this.props.auth.isLoading?'Loading...':auth\n                ? userHeader\n                : guestHeader}</React.Fragment>\n    }\n}\n\nconst mapStateToProps = (state) => ({auth: state.auth})\nexport default connect(mapStateToProps, {logout})(AppNavbar);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport {registerUser} from '../../actions/authActions';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: '',\n            email: '',\n            password: '',\n            redirect: false,\n            message: ''\n        };\n    }\n    \n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.props.auth.isAuthenticated) {\n            alert('You have to log out to register a new user.');\n        } else {\n            this\n                .props\n                .registerUser({name: this.state.user, email: this.state.email, password: this.state.password})\n                .then(res => {\n                    if (this.props.auth.isAuthenticated) {\n                        this.props.history.push('/');\n                    }\n                    else {\n                        alert(this.props.error.message.message);\n                    }\n                });\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <form className='sign-form' onSubmit={this.handleSubmit}>\n                <h2 className='sign-header'>Register</h2>\n                <fieldset>\n                    <label className='sign-label'>Username\n                    </label>\n                    <input\n                        type='text'\n                        value={this.state.user}\n                        onChange={this.handleChange}\n                        name='user'\n                        className='sign-input'/>\n                </fieldset>\n                <fieldset>\n                    <label className='sign-label'>Email</label>\n                    <input\n                        type='email'\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                        name='email'\n                        className='sign-input'/>\n                </fieldset>\n                <fieldset>\n                    <label className='sign-label'>Password</label>\n                    <input\n                        type='password'\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                        name='password'\n                        className='sign-input'/>\n                </fieldset>\n                <input type='submit' className='sign-button'/>\n            </form>\n        );\n    }\n}\n\nexport default connect(state => ({auth: state.auth, error: state.error}), {registerUser})(Register);","import React, { Component } from 'react';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  };\n    }\n    render() {\n        return (\n            <div>\n                Homepage\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\n\nclass About extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  };\n    }\n    render() {\n        return (\n            <div>\n                About\n            </div>\n        );\n    }\n}\n\nexport default About;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport {loginUser} from '../../actions/authActions';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: '',\n            password: ''\n        };\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.props.auth.isAuthenticated) {\n            alert('You are already logged in!');\n        }\n        this.props\n            .loginUser({name: this.state.user, password: this.state.password})\n            .then(res => {\n                if (this.props.auth.isAuthenticated) this.props.history.push('/')\n                else alert(this.props.error.message.message);\n            })\n    }\n\n    render() {\n        return (\n            <form className='sign-form' onSubmit={this.handleSubmit}>\n                <h2 className='sign-header'>Sign in</h2>\n                <fieldset>\n                    <label className='sign-label'>Username\n                    </label>\n                    <input\n                        type='text'\n                        value={this.state.user}\n                        onChange={this.handleChange}\n                        name='user'\n                        className='sign-input'/>\n                </fieldset>\n                <fieldset>\n                    <label className='sign-label'>Password</label>\n                    <input\n                        type='password'\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                        name='password'\n                        className='sign-input'/>\n                </fieldset>\n                <input type='submit' className='sign-button'/>\n            </form>\n        )\n    }\n}\n\nexport default connect(state => ({auth: state.auth, error: state.error}), {loginUser})(Login);","import axios from 'axios';\nimport {\n    RECENTS_LOADING,\n    RECENT_LOADED,\n    RECENT_LOADING_FAIL,\n    MESSAGES_LOADED,\n    MESSAGES_LOADING,\n    MESSAGE_LOADING_FAIL,\n    SEND_MESSAGE,\n    SEND_MESSAGE_FAIL,\n    MESSAGE_SENT,\n    GET_ERRORS,\n    LOAD_MORE\n} from '../actions/types';\n\nimport {returnErrors} from './errorActions';\n\nexport const getDialogues = () => (dispatch, getState) => {\n    dispatch({type: RECENTS_LOADING});\n    const token = getState().auth.token;\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    }\n    if (token) \n        config.headers['x-auth-token'] = token;\n    \n    axios\n        .get('/api/messages/recents', config)\n        .then(res => {\n            dispatch({type: RECENT_LOADED, payload: res.data})\n        })\n        .catch(err => {\n            dispatch({type: RECENT_LOADING_FAIL});\n            console.log(err)\n            dispatch(returnErrors(err.response.message, 500));\n        })\n}\n\nexport const getMessages = (id, user = null, page = 1) => (dispatch, getState) => {\n    dispatch({type: MESSAGES_LOADING, payload: {\n            user,\n            id\n        }});\n\n    const token = getState().auth.token;\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    }\n    if (token) \n        config.headers['x-auth-token'] = token;\n\n    axios\n        .get('/api/messages/dialogue/' + id + `?page=${page}`, config)\n        .then(res => {\n            if (page === 1) \n                dispatch({\n                    type: MESSAGES_LOADED,\n                    payload: {\n                        messages: res.data,\n                        user,\n                        user_id: res.data.user_id\n                    }\n                });\n            else \n                dispatch({\n                    type: LOAD_MORE,\n                    payload: {\n                        messages: res.data\n                    }\n                })\n        })\n        .catch(err => {\n            dispatch({type: MESSAGE_LOADING_FAIL})\n            console.log(err);\n        })\n}\n\nexport const sendMessage = (id, body) => (dispatch, getState) => {\n    dispatch({type: SEND_MESSAGE});\n\n    const token = getState().auth.token;\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    }\n    if (token) \n        config.headers['x-auth-token'] = token;\n    \n    const requestBody = {\n        message: body\n    }\n    axios\n        .post('/api/messages/new_message/' + id, requestBody, config)\n        .then(res => {\n            const {body, created_on, _id} = res.data.msg;\n            dispatch(getDialogues());\n            dispatch({\n                type: MESSAGE_SENT,\n                payload: {\n                    body,\n                    created_on,\n                    id: _id,\n                    isMine: true\n                }\n            })\n        })\n        .catch(err => {\n            dispatch({type: SEND_MESSAGE_FAIL});\n            dispatch({type: GET_ERRORS, payload: err.response.data})\n            console.log(err);\n        })\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport {sendMessage} from '../../actions/messageActions';\n\nclass MessageInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: ''\n        };\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSend = (e) => {\n        e.preventDefault();\n        const id = this.props.message.user_id;\n        if (this.state.message === '') return;\n        this.props.sendMessage(id, this.state.message)\n        this.setState({message: ''})\n    }\n    render() {\n        if (!this.props.message.user) return null;\n        return (\n            <div className='message-input-container'>\n                <form onSubmit={this.handleSend} className='message-input'>\n                    <input type='text' name='message' value={this.state.message} onChange={this.handleChange}/>\n                    <button>Send</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default connect(state => ({message: state.message}), {sendMessage})(MessageInput);","import React, {Component} from 'react';\nimport './message-container.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        const {isMine, body} = this.props.message;\n        return (\n            <div\n                className={'message' + (isMine\n                ? ' message-mine'\n                : '')}>\n                {body}</div>\n        );\n    }\n}\n\nexport default Message;","import React, {Component} from 'react';\nimport Message from './Message';\nimport {connect} from 'react-redux';\nimport {getMessages, getDialogues} from '../../actions/messageActions';\n\nclass MessageContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 1\n        };\n    }\n\n    updateScroll = () => {\n        this\n            .messagesEnd\n            .scrollIntoView({behavior: \"smooth\"})\n    }\n\n    componentDidMount() {\n        // setInterval(() => {\n        //     if (this.props.message.dialogue_id) {\n        //         this.props.getMessages(this.props.message.dialogue_id, this.props.message.user)\n        //         this.props.getDialogues();\n        //     }\n        // }, 2000);\n    }\n\n    loadMore = () => {\n        const id = this.props.message.dialogue_id;\n        const user = this.props.message.user;\n        const page = this.props.message.page;\n        this\n            .props\n            .getMessages(id, user, page);\n    }\n\n    render() {\n        return (\n            <div className='message-container'>\n                <div\n                    style={{\n                    float: \"left\",\n                    clear: \"both\"\n                }}\n                    ref={(el) => {\n                    this.messagesEnd = el;\n                }}></div>\n                {this.props.message.messages.length === 0 && this.props.message.user\n                    ? <div className='message-container-alert'>You don't have any messages yet.<br/><br/>Be the first ot start a conversation!</div>\n                    : ''\n            }\n            {\n                this\n                    .props\n                    .message\n                    .messages\n                    .map((message, index, array) => (\n                        <React.Fragment key={message.id}>\n                            <Message message={message}/> {index === array.length - 1 && array.length >= 20\n                                ? <button className='navbar-btn' onClick={this.loadMore}>Load more</button>\n                                : ''}\n                        </React.Fragment>\n                    ))\n            } </div>\n        );\n    }\n}\n\nexport default connect(state => ({message: state.message}), {getMessages, getDialogues})(MessageContainer);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport MessageInput from './MessageInput';\nimport MessageContainer from './MessageContainer';\nimport {getMessages} from '../../actions/messageActions';\n\nclass Chat extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n    \n    render() {\n        return (\n            <div className='chat-container'>\n                <div className='chat-header'>{this.props.message.user}</div>\n                <MessageContainer/>\n                <MessageInput/>\n            </div>\n        );\n    }\n}\n\nexport default connect(state => ({message: state.message}), {getMessages})(Chat);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport {getMessages} from '../../actions/messageActions';\n\nclass RecentDialogue extends Component {\n\n    handleDialogueClick = (id, user) => {\n        this\n            .props\n            .getMessages(id, user);\n    }\n\n    render() {\n        const recent = this.props.recent;\n        let className = 'recent-item';\n        if (this.props.message.user === recent.user) className += ' recent-item-active'\n\n        return (\n            <div\n                className={className}\n                onClick={() => this.handleDialogueClick(recent.id, recent.user)}>\n                <div className='recent-item-user'>{recent.user}</div>\n                <div className='recent-item-message'>{recent.message}</div>\n            </div>\n        );\n    }\n}\n\nexport default connect(state => ({auth: state.auth, message: state.message}), {getMessages})(RecentDialogue);","import React, {Component} from 'react';\n\nimport {connect} from 'react-redux';\nimport {getAllUsers, openDialogue} from '../../actions/controlsActions';\n\nclass Controls extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchValue: ''\n        };\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    componentDidMount() {\n        this\n            .props\n            .getAllUsers();\n    }\n    newDialogue = () => {\n        const newDialogue = this.state.searchValue;\n        this.props.openDialogue(newDialogue);\n    }\n    render() {\n        return (\n            <div className='controls'>\n                <h2 style={{\"marginTop\": \"10px\"}}>Find a user:</h2>\n                <input\n                    type='text'\n                    name='searchValue'\n                    value={this.state.searchValue}\n                    onChange={this.handleChange}/>\n                <button onClick={this.newDialogue}>Send message</button>\n            </div>\n        );\n    }\n}\n\nexport default connect(state => ({controls: state.controls}), {getAllUsers, openDialogue})(Controls);","import axios from 'axios';\nimport {GET_USERS} from '../actions/types';\nimport {getMessages} from './messageActions';\nexport const getAllUsers = () => dispatch => {\n    axios\n        .get('/api/users/all_users')\n        .then(res => {\n            dispatch({type: GET_USERS, payload: res.data})\n        })\n}\n\nexport const openDialogue = (newUser) => (dispatch, getState) => {\n    const users = getState()\n        .controls\n        .users\n        .map(user => user.name);\n\n    const token = getState().auth.token;\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    }\n    if (token) \n        config.headers['x-auth-token'] = token;\n    \n    const userIndex = users.indexOf(newUser)\n    if (userIndex > -1 && newUser !== getState().auth.user.name) {\n        // User exists\n        axios\n            .post('/api/messages/new_dialogue/'+getState().controls.users[userIndex]._id, {}, config)\n            .then(res => {\n                dispatch(getMessages(res.data.dialogue_id, newUser));\n            })\n    }\n    else if (newUser === getState().auth.user.name) {\n        alert(\"You can't message yourself!\")\n    }\n    else {\n        alert('No such user');\n    }\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../messenger/index.css';\n\nimport Chat from '../messenger/Chat';\n\nimport {getDialogues, getMessages} from '../../actions/messageActions';\nimport RecentDialogue from '../messenger/RecentDialogue';\nimport Controls from '../helpers/Controls';\n\nclass Inbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        this\n            .props\n            .getDialogues();\n    }\n\n    handleDialogueClick = (id, user) => {\n        this\n            .props\n            .getMessages(id, user);\n    }\n\n    render() {\n        return (\n            <div className='inbox-container'>\n                <div className='recent-container'>\n                    <Controls />\n                    {this\n                        .props\n                        .message\n                        .recents\n                        .map(recent => (<RecentDialogue recent={recent} key={recent.id}/>))}\n                </div>\n                <Chat/>\n            </div>\n        );\n    }\n\n}\n\nexport default connect(state => ({auth: state.auth, message: state.message}), {getDialogues, getMessages})(Inbox);","import React, {Component} from 'react';\nimport './App.css';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nimport store from './store';\nimport {loadUser} from './actions/authActions';\nimport PrivateRoute from './components/helpers/PrivateRoute';\n\nimport AppNavbar from './components/AppNavbar'\nimport Register from './components/sign/Register';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Login from './components/sign/Login';\nimport Inbox from './components/containers/Inbox';\n\nclass App extends Component {\n    componentDidMount() {\n        store.dispatch(loadUser())\n    }\n\n    render() {\n        const auth = store\n            .getState()\n            .auth\n            .isAuthenticated;\n        return (\n            <Provider store={store}>\n                <Router>\n                    <AppNavbar/>\n                    <Switch>\n                        <Route\n                            path='/'\n                            exact\n                            component={auth\n                            ? Home\n                            : About}/>\n                        <Route path='/register' exact component={Register}/>\n                        <Route path='/login' exact component={Login}/>\n                        <PrivateRoute exact path=\"/inbox\" component={Inbox}/>\n                    </Switch>\n                </Router>\n            </Provider>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}